version: "3.8"

networks:
  microservices:
  author-net:
  book-net:

services:
  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "8080:8080"
      - "4000:4000"
    environment:
      - LOG_LEVEL=debug
    networks:
      - microservices
    depends_on:
      - api-author
      - api-book

  api-author:
    build: ./services/author
    container_name: api-author
    command: "node index.js"
    ports:
      - "4001:4001"
    environment:
      - LOG_LEVEL=debug
    networks:
      - microservices
      - author-net
    depends_on:
      - api-author-db

  api-book:
    build: ./services/book
    container_name: api-book
    command: "node index.js"
    ports:
      - "4002:4002"
    environment:
      - LOG_LEVEL=debug
    networks:
      - microservices
      - book-net
    depends_on:
      - api-book-db

  api-author-db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: author_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports: 
      - "5432:5432"
    volumes:
      - graphql-author-db-data:/var/lib/postgresql/data
      - './services/author/init.sql:/docker-entrypoint-initdb.d/init.sql'
    networks:
      - author-net
  
  api-book-db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: book_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports: 
      - "5433:5433"
    volumes:
      - graphql-book-db-data:/var/lib/postgresql/data
      - './services/book/init.sql:/docker-entrypoint-initdb.d/init.sql'
    networks:
      - book-net

volumes:
  graphql-author-db-data:
    driver: local
  graphql-book-db-data:
    driver: local
